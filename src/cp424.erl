%% THIS FILE WAS AUTOMATICALLY GENERATED BY gen_src.pl
%% FROM mappings/MISC/CP424.TXT AT 2016-08-19
-module(cp424).
-vsn(20160819).
-export([to_unicode/1, from_unicode/1]).

%% Public functions
to_unicode(16#04) -> 16#009C;
to_unicode(16#05) -> 16#0009;
to_unicode(16#06) -> 16#0086;
to_unicode(16#07) -> 16#007F;
to_unicode(16#08) -> 16#0097;
to_unicode(16#09) -> 16#008D;
to_unicode(16#0A) -> 16#008E;
to_unicode(16#14) -> 16#009D;
to_unicode(16#15) -> 16#0085;
to_unicode(16#16) -> 16#0008;
to_unicode(16#17) -> 16#0087;
to_unicode(16#1A) -> 16#0092;
to_unicode(16#1B) -> 16#008F;
to_unicode(16#20) -> 16#0080;
to_unicode(16#21) -> 16#0081;
to_unicode(16#22) -> 16#0082;
to_unicode(16#23) -> 16#0083;
to_unicode(16#24) -> 16#0084;
to_unicode(16#25) -> 16#000A;
to_unicode(16#26) -> 16#0017;
to_unicode(16#27) -> 16#001B;
to_unicode(16#28) -> 16#0088;
to_unicode(16#29) -> 16#0089;
to_unicode(16#2A) -> 16#008A;
to_unicode(16#2B) -> 16#008B;
to_unicode(16#2C) -> 16#008C;
to_unicode(16#2D) -> 16#0005;
to_unicode(16#2E) -> 16#0006;
to_unicode(16#2F) -> 16#0007;
to_unicode(16#30) -> 16#0090;
to_unicode(16#31) -> 16#0091;
to_unicode(16#32) -> 16#0016;
to_unicode(16#33) -> 16#0093;
to_unicode(16#34) -> 16#0094;
to_unicode(16#35) -> 16#0095;
to_unicode(16#36) -> 16#0096;
to_unicode(16#37) -> 16#0004;
to_unicode(16#38) -> 16#0098;
to_unicode(16#39) -> 16#0099;
to_unicode(16#3A) -> 16#009A;
to_unicode(16#3B) -> 16#009B;
to_unicode(16#3C) -> 16#0014;
to_unicode(16#3D) -> 16#0015;
to_unicode(16#3E) -> 16#009E;
to_unicode(16#3F) -> 16#001A;
to_unicode(16#40) -> 16#0020;
to_unicode(16#41) -> 16#05D0;
to_unicode(16#42) -> 16#05D1;
to_unicode(16#43) -> 16#05D2;
to_unicode(16#44) -> 16#05D3;
to_unicode(16#45) -> 16#05D4;
to_unicode(16#46) -> 16#05D5;
to_unicode(16#47) -> 16#05D6;
to_unicode(16#48) -> 16#05D7;
to_unicode(16#49) -> 16#05D8;
to_unicode(16#4A) -> 16#00A2;
to_unicode(16#4B) -> 16#002E;
to_unicode(16#4C) -> 16#003C;
to_unicode(16#4D) -> 16#0028;
to_unicode(16#4E) -> 16#002B;
to_unicode(16#4F) -> 16#007C;
to_unicode(16#50) -> 16#0026;
to_unicode(16#51) -> 16#05D9;
to_unicode(16#52) -> 16#05DA;
to_unicode(16#53) -> 16#05DB;
to_unicode(16#54) -> 16#05DC;
to_unicode(16#55) -> 16#05DD;
to_unicode(16#56) -> 16#05DE;
to_unicode(16#57) -> 16#05DF;
to_unicode(16#58) -> 16#05E0;
to_unicode(16#59) -> 16#05E1;
to_unicode(16#5A) -> 16#0021;
to_unicode(16#5B) -> 16#0024;
to_unicode(16#5C) -> 16#002A;
to_unicode(16#5D) -> 16#0029;
to_unicode(16#5E) -> 16#003B;
to_unicode(16#5F) -> 16#00AC;
to_unicode(16#60) -> 16#002D;
to_unicode(16#61) -> 16#002F;
to_unicode(16#62) -> 16#05E2;
to_unicode(16#63) -> 16#05E3;
to_unicode(16#64) -> 16#05E4;
to_unicode(16#65) -> 16#05E5;
to_unicode(16#66) -> 16#05E6;
to_unicode(16#67) -> 16#05E7;
to_unicode(16#68) -> 16#05E8;
to_unicode(16#69) -> 16#05E9;
to_unicode(16#6A) -> 16#00A6;
to_unicode(16#6B) -> 16#002C;
to_unicode(16#6C) -> 16#0025;
to_unicode(16#6D) -> 16#005F;
to_unicode(16#6E) -> 16#003E;
to_unicode(16#6F) -> 16#003F;
to_unicode(16#71) -> 16#05EA;
to_unicode(16#74) -> 16#00A0;
to_unicode(16#78) -> 16#2017;
to_unicode(16#79) -> 16#0060;
to_unicode(16#7A) -> 16#003A;
to_unicode(16#7B) -> 16#0023;
to_unicode(16#7C) -> 16#0040;
to_unicode(16#7D) -> 16#0027;
to_unicode(16#7E) -> 16#003D;
to_unicode(16#7F) -> 16#0022;
to_unicode(16#81) -> 16#0061;
to_unicode(16#82) -> 16#0062;
to_unicode(16#83) -> 16#0063;
to_unicode(16#84) -> 16#0064;
to_unicode(16#85) -> 16#0065;
to_unicode(16#86) -> 16#0066;
to_unicode(16#87) -> 16#0067;
to_unicode(16#88) -> 16#0068;
to_unicode(16#89) -> 16#0069;
to_unicode(16#8A) -> 16#00AB;
to_unicode(16#8B) -> 16#00BB;
to_unicode(16#8F) -> 16#00B1;
to_unicode(16#90) -> 16#00B0;
to_unicode(16#91) -> 16#006A;
to_unicode(16#92) -> 16#006B;
to_unicode(16#93) -> 16#006C;
to_unicode(16#94) -> 16#006D;
to_unicode(16#95) -> 16#006E;
to_unicode(16#96) -> 16#006F;
to_unicode(16#97) -> 16#0070;
to_unicode(16#98) -> 16#0071;
to_unicode(16#99) -> 16#0072;
to_unicode(16#9D) -> 16#00B8;
to_unicode(16#9F) -> 16#00A4;
to_unicode(16#A0) -> 16#00B5;
to_unicode(16#A1) -> 16#007E;
to_unicode(16#A2) -> 16#0073;
to_unicode(16#A3) -> 16#0074;
to_unicode(16#A4) -> 16#0075;
to_unicode(16#A5) -> 16#0076;
to_unicode(16#A6) -> 16#0077;
to_unicode(16#A7) -> 16#0078;
to_unicode(16#A8) -> 16#0079;
to_unicode(16#A9) -> 16#007A;
to_unicode(16#AF) -> 16#00AE;
to_unicode(16#B0) -> 16#005E;
to_unicode(16#B1) -> 16#00A3;
to_unicode(16#B2) -> 16#00A5;
to_unicode(16#B3) -> 16#00B7;
to_unicode(16#B4) -> 16#00A9;
to_unicode(16#B5) -> 16#00A7;
to_unicode(16#B7) -> 16#00BC;
to_unicode(16#B8) -> 16#00BD;
to_unicode(16#B9) -> 16#00BE;
to_unicode(16#BA) -> 16#005B;
to_unicode(16#BB) -> 16#005D;
to_unicode(16#BC) -> 16#00AF;
to_unicode(16#BD) -> 16#00A8;
to_unicode(16#BE) -> 16#00B4;
to_unicode(16#BF) -> 16#00D7;
to_unicode(16#C0) -> 16#007B;
to_unicode(16#C1) -> 16#0041;
to_unicode(16#C2) -> 16#0042;
to_unicode(16#C3) -> 16#0043;
to_unicode(16#C4) -> 16#0044;
to_unicode(16#C5) -> 16#0045;
to_unicode(16#C6) -> 16#0046;
to_unicode(16#C7) -> 16#0047;
to_unicode(16#C8) -> 16#0048;
to_unicode(16#C9) -> 16#0049;
to_unicode(16#CA) -> 16#00AD;
to_unicode(16#D0) -> 16#007D;
to_unicode(16#D1) -> 16#004A;
to_unicode(16#D2) -> 16#004B;
to_unicode(16#D3) -> 16#004C;
to_unicode(16#D4) -> 16#004D;
to_unicode(16#D5) -> 16#004E;
to_unicode(16#D6) -> 16#004F;
to_unicode(16#D7) -> 16#0050;
to_unicode(16#D8) -> 16#0051;
to_unicode(16#D9) -> 16#0052;
to_unicode(16#DA) -> 16#00B9;
to_unicode(16#E0) -> 16#005C;
to_unicode(16#E1) -> 16#00F7;
to_unicode(16#E2) -> 16#0053;
to_unicode(16#E3) -> 16#0054;
to_unicode(16#E4) -> 16#0055;
to_unicode(16#E5) -> 16#0056;
to_unicode(16#E6) -> 16#0057;
to_unicode(16#E7) -> 16#0058;
to_unicode(16#E8) -> 16#0059;
to_unicode(16#E9) -> 16#005A;
to_unicode(16#EA) -> 16#00B2;
to_unicode(16#F0) -> 16#0030;
to_unicode(16#F1) -> 16#0031;
to_unicode(16#F2) -> 16#0032;
to_unicode(16#F3) -> 16#0033;
to_unicode(16#F4) -> 16#0034;
to_unicode(16#F5) -> 16#0035;
to_unicode(16#F6) -> 16#0036;
to_unicode(16#F7) -> 16#0037;
to_unicode(16#F8) -> 16#0038;
to_unicode(16#F9) -> 16#0039;
to_unicode(16#FA) -> 16#00B3;
to_unicode(16#FF) -> 16#009F;
to_unicode(List) when is_list(List) -> [to_unicode(C) || C <- List];
to_unicode(Bin) when is_binary(Bin) -> bin_to_unicode(Bin, <<>>);
to_unicode(Other) -> Other.

from_unicode(16#009C) -> 16#04;
from_unicode(16#0009) -> 16#05;
from_unicode(16#0086) -> 16#06;
from_unicode(16#007F) -> 16#07;
from_unicode(16#0097) -> 16#08;
from_unicode(16#008D) -> 16#09;
from_unicode(16#008E) -> 16#0A;
from_unicode(16#009D) -> 16#14;
from_unicode(16#0085) -> 16#15;
from_unicode(16#0008) -> 16#16;
from_unicode(16#0087) -> 16#17;
from_unicode(16#0092) -> 16#1A;
from_unicode(16#008F) -> 16#1B;
from_unicode(16#0080) -> 16#20;
from_unicode(16#0081) -> 16#21;
from_unicode(16#0082) -> 16#22;
from_unicode(16#0083) -> 16#23;
from_unicode(16#0084) -> 16#24;
from_unicode(16#000A) -> 16#25;
from_unicode(16#0017) -> 16#26;
from_unicode(16#001B) -> 16#27;
from_unicode(16#0088) -> 16#28;
from_unicode(16#0089) -> 16#29;
from_unicode(16#008A) -> 16#2A;
from_unicode(16#008B) -> 16#2B;
from_unicode(16#008C) -> 16#2C;
from_unicode(16#0005) -> 16#2D;
from_unicode(16#0006) -> 16#2E;
from_unicode(16#0007) -> 16#2F;
from_unicode(16#0090) -> 16#30;
from_unicode(16#0091) -> 16#31;
from_unicode(16#0016) -> 16#32;
from_unicode(16#0093) -> 16#33;
from_unicode(16#0094) -> 16#34;
from_unicode(16#0095) -> 16#35;
from_unicode(16#0096) -> 16#36;
from_unicode(16#0004) -> 16#37;
from_unicode(16#0098) -> 16#38;
from_unicode(16#0099) -> 16#39;
from_unicode(16#009A) -> 16#3A;
from_unicode(16#009B) -> 16#3B;
from_unicode(16#0014) -> 16#3C;
from_unicode(16#0015) -> 16#3D;
from_unicode(16#009E) -> 16#3E;
from_unicode(16#001A) -> 16#3F;
from_unicode(16#0020) -> 16#40;
from_unicode(16#05D0) -> 16#41;
from_unicode(16#05D1) -> 16#42;
from_unicode(16#05D2) -> 16#43;
from_unicode(16#05D3) -> 16#44;
from_unicode(16#05D4) -> 16#45;
from_unicode(16#05D5) -> 16#46;
from_unicode(16#05D6) -> 16#47;
from_unicode(16#05D7) -> 16#48;
from_unicode(16#05D8) -> 16#49;
from_unicode(16#00A2) -> 16#4A;
from_unicode(16#002E) -> 16#4B;
from_unicode(16#003C) -> 16#4C;
from_unicode(16#0028) -> 16#4D;
from_unicode(16#002B) -> 16#4E;
from_unicode(16#007C) -> 16#4F;
from_unicode(16#0026) -> 16#50;
from_unicode(16#05D9) -> 16#51;
from_unicode(16#05DA) -> 16#52;
from_unicode(16#05DB) -> 16#53;
from_unicode(16#05DC) -> 16#54;
from_unicode(16#05DD) -> 16#55;
from_unicode(16#05DE) -> 16#56;
from_unicode(16#05DF) -> 16#57;
from_unicode(16#05E0) -> 16#58;
from_unicode(16#05E1) -> 16#59;
from_unicode(16#0021) -> 16#5A;
from_unicode(16#0024) -> 16#5B;
from_unicode(16#002A) -> 16#5C;
from_unicode(16#0029) -> 16#5D;
from_unicode(16#003B) -> 16#5E;
from_unicode(16#00AC) -> 16#5F;
from_unicode(16#002D) -> 16#60;
from_unicode(16#002F) -> 16#61;
from_unicode(16#05E2) -> 16#62;
from_unicode(16#05E3) -> 16#63;
from_unicode(16#05E4) -> 16#64;
from_unicode(16#05E5) -> 16#65;
from_unicode(16#05E6) -> 16#66;
from_unicode(16#05E7) -> 16#67;
from_unicode(16#05E8) -> 16#68;
from_unicode(16#05E9) -> 16#69;
from_unicode(16#00A6) -> 16#6A;
from_unicode(16#002C) -> 16#6B;
from_unicode(16#0025) -> 16#6C;
from_unicode(16#005F) -> 16#6D;
from_unicode(16#003E) -> 16#6E;
from_unicode(16#003F) -> 16#6F;
from_unicode(16#05EA) -> 16#71;
from_unicode(16#00A0) -> 16#74;
from_unicode(16#2017) -> 16#78;
from_unicode(16#0060) -> 16#79;
from_unicode(16#003A) -> 16#7A;
from_unicode(16#0023) -> 16#7B;
from_unicode(16#0040) -> 16#7C;
from_unicode(16#0027) -> 16#7D;
from_unicode(16#003D) -> 16#7E;
from_unicode(16#0022) -> 16#7F;
from_unicode(16#0061) -> 16#81;
from_unicode(16#0062) -> 16#82;
from_unicode(16#0063) -> 16#83;
from_unicode(16#0064) -> 16#84;
from_unicode(16#0065) -> 16#85;
from_unicode(16#0066) -> 16#86;
from_unicode(16#0067) -> 16#87;
from_unicode(16#0068) -> 16#88;
from_unicode(16#0069) -> 16#89;
from_unicode(16#00AB) -> 16#8A;
from_unicode(16#00BB) -> 16#8B;
from_unicode(16#00B1) -> 16#8F;
from_unicode(16#00B0) -> 16#90;
from_unicode(16#006A) -> 16#91;
from_unicode(16#006B) -> 16#92;
from_unicode(16#006C) -> 16#93;
from_unicode(16#006D) -> 16#94;
from_unicode(16#006E) -> 16#95;
from_unicode(16#006F) -> 16#96;
from_unicode(16#0070) -> 16#97;
from_unicode(16#0071) -> 16#98;
from_unicode(16#0072) -> 16#99;
from_unicode(16#00B8) -> 16#9D;
from_unicode(16#00A4) -> 16#9F;
from_unicode(16#00B5) -> 16#A0;
from_unicode(16#007E) -> 16#A1;
from_unicode(16#0073) -> 16#A2;
from_unicode(16#0074) -> 16#A3;
from_unicode(16#0075) -> 16#A4;
from_unicode(16#0076) -> 16#A5;
from_unicode(16#0077) -> 16#A6;
from_unicode(16#0078) -> 16#A7;
from_unicode(16#0079) -> 16#A8;
from_unicode(16#007A) -> 16#A9;
from_unicode(16#00AE) -> 16#AF;
from_unicode(16#005E) -> 16#B0;
from_unicode(16#00A3) -> 16#B1;
from_unicode(16#00A5) -> 16#B2;
from_unicode(16#00B7) -> 16#B3;
from_unicode(16#00A9) -> 16#B4;
from_unicode(16#00A7) -> 16#B5;
from_unicode(16#00BC) -> 16#B7;
from_unicode(16#00BD) -> 16#B8;
from_unicode(16#00BE) -> 16#B9;
from_unicode(16#005B) -> 16#BA;
from_unicode(16#005D) -> 16#BB;
from_unicode(16#00AF) -> 16#BC;
from_unicode(16#00A8) -> 16#BD;
from_unicode(16#00B4) -> 16#BE;
from_unicode(16#00D7) -> 16#BF;
from_unicode(16#007B) -> 16#C0;
from_unicode(16#0041) -> 16#C1;
from_unicode(16#0042) -> 16#C2;
from_unicode(16#0043) -> 16#C3;
from_unicode(16#0044) -> 16#C4;
from_unicode(16#0045) -> 16#C5;
from_unicode(16#0046) -> 16#C6;
from_unicode(16#0047) -> 16#C7;
from_unicode(16#0048) -> 16#C8;
from_unicode(16#0049) -> 16#C9;
from_unicode(16#00AD) -> 16#CA;
from_unicode(16#007D) -> 16#D0;
from_unicode(16#004A) -> 16#D1;
from_unicode(16#004B) -> 16#D2;
from_unicode(16#004C) -> 16#D3;
from_unicode(16#004D) -> 16#D4;
from_unicode(16#004E) -> 16#D5;
from_unicode(16#004F) -> 16#D6;
from_unicode(16#0050) -> 16#D7;
from_unicode(16#0051) -> 16#D8;
from_unicode(16#0052) -> 16#D9;
from_unicode(16#00B9) -> 16#DA;
from_unicode(16#005C) -> 16#E0;
from_unicode(16#00F7) -> 16#E1;
from_unicode(16#0053) -> 16#E2;
from_unicode(16#0054) -> 16#E3;
from_unicode(16#0055) -> 16#E4;
from_unicode(16#0056) -> 16#E5;
from_unicode(16#0057) -> 16#E6;
from_unicode(16#0058) -> 16#E7;
from_unicode(16#0059) -> 16#E8;
from_unicode(16#005A) -> 16#E9;
from_unicode(16#00B2) -> 16#EA;
from_unicode(16#0030) -> 16#F0;
from_unicode(16#0031) -> 16#F1;
from_unicode(16#0032) -> 16#F2;
from_unicode(16#0033) -> 16#F3;
from_unicode(16#0034) -> 16#F4;
from_unicode(16#0035) -> 16#F5;
from_unicode(16#0036) -> 16#F6;
from_unicode(16#0037) -> 16#F7;
from_unicode(16#0038) -> 16#F8;
from_unicode(16#0039) -> 16#F9;
from_unicode(16#00B3) -> 16#FA;
from_unicode(16#009F) -> 16#FF;
from_unicode(List) when is_list(List) -> [from_unicode(C) || C <- List];
from_unicode(Bin) when is_binary(Bin) -> bin_from_unicode(Bin, <<>>);
from_unicode(Other) -> Other.

%% Private functions
bin_to_unicode(<<>>, Bin) -> Bin;
bin_to_unicode(<<C, Rest/binary>>, Acc) ->
    U = to_unicode(C),
    bin_to_unicode(Rest, <<Acc/binary, U/utf8>>).

bin_from_unicode(<<>>, Bin) -> Bin;
bin_from_unicode(<<U/utf8, Rest/binary>>, Acc) ->
    C = from_unicode(U),
    bin_from_unicode(Rest, <<Acc/binary, C>>).
