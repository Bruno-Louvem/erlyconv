%% THIS FILE WAS AUTOMATICALLY GENERATED BY gen_src.pl
%% FROM mappings/MICSFT/WINDOWS/CP1256.TXT AT 2016-08-19
-module(cp1256).
-vsn(20160819).
-export([to_unicode/1, from_unicode/1]).

%% Public functions
to_unicode(16#80) -> 16#20AC;
to_unicode(16#81) -> 16#067E;
to_unicode(16#82) -> 16#201A;
to_unicode(16#83) -> 16#0192;
to_unicode(16#84) -> 16#201E;
to_unicode(16#85) -> 16#2026;
to_unicode(16#86) -> 16#2020;
to_unicode(16#87) -> 16#2021;
to_unicode(16#88) -> 16#02C6;
to_unicode(16#89) -> 16#2030;
to_unicode(16#8A) -> 16#0679;
to_unicode(16#8B) -> 16#2039;
to_unicode(16#8C) -> 16#0152;
to_unicode(16#8D) -> 16#0686;
to_unicode(16#8E) -> 16#0698;
to_unicode(16#8F) -> 16#0688;
to_unicode(16#90) -> 16#06AF;
to_unicode(16#91) -> 16#2018;
to_unicode(16#92) -> 16#2019;
to_unicode(16#93) -> 16#201C;
to_unicode(16#94) -> 16#201D;
to_unicode(16#95) -> 16#2022;
to_unicode(16#96) -> 16#2013;
to_unicode(16#97) -> 16#2014;
to_unicode(16#98) -> 16#06A9;
to_unicode(16#99) -> 16#2122;
to_unicode(16#9A) -> 16#0691;
to_unicode(16#9B) -> 16#203A;
to_unicode(16#9C) -> 16#0153;
to_unicode(16#9D) -> 16#200C;
to_unicode(16#9E) -> 16#200D;
to_unicode(16#9F) -> 16#06BA;
to_unicode(16#A1) -> 16#060C;
to_unicode(16#AA) -> 16#06BE;
to_unicode(16#BA) -> 16#061B;
to_unicode(16#BF) -> 16#061F;
to_unicode(16#C0) -> 16#06C1;
to_unicode(16#C1) -> 16#0621;
to_unicode(16#C2) -> 16#0622;
to_unicode(16#C3) -> 16#0623;
to_unicode(16#C4) -> 16#0624;
to_unicode(16#C5) -> 16#0625;
to_unicode(16#C6) -> 16#0626;
to_unicode(16#C7) -> 16#0627;
to_unicode(16#C8) -> 16#0628;
to_unicode(16#C9) -> 16#0629;
to_unicode(16#CA) -> 16#062A;
to_unicode(16#CB) -> 16#062B;
to_unicode(16#CC) -> 16#062C;
to_unicode(16#CD) -> 16#062D;
to_unicode(16#CE) -> 16#062E;
to_unicode(16#CF) -> 16#062F;
to_unicode(16#D0) -> 16#0630;
to_unicode(16#D1) -> 16#0631;
to_unicode(16#D2) -> 16#0632;
to_unicode(16#D3) -> 16#0633;
to_unicode(16#D4) -> 16#0634;
to_unicode(16#D5) -> 16#0635;
to_unicode(16#D6) -> 16#0636;
to_unicode(16#D8) -> 16#0637;
to_unicode(16#D9) -> 16#0638;
to_unicode(16#DA) -> 16#0639;
to_unicode(16#DB) -> 16#063A;
to_unicode(16#DC) -> 16#0640;
to_unicode(16#DD) -> 16#0641;
to_unicode(16#DE) -> 16#0642;
to_unicode(16#DF) -> 16#0643;
to_unicode(16#E1) -> 16#0644;
to_unicode(16#E3) -> 16#0645;
to_unicode(16#E4) -> 16#0646;
to_unicode(16#E5) -> 16#0647;
to_unicode(16#E6) -> 16#0648;
to_unicode(16#EC) -> 16#0649;
to_unicode(16#ED) -> 16#064A;
to_unicode(16#F0) -> 16#064B;
to_unicode(16#F1) -> 16#064C;
to_unicode(16#F2) -> 16#064D;
to_unicode(16#F3) -> 16#064E;
to_unicode(16#F5) -> 16#064F;
to_unicode(16#F6) -> 16#0650;
to_unicode(16#F8) -> 16#0651;
to_unicode(16#FA) -> 16#0652;
to_unicode(16#FD) -> 16#200E;
to_unicode(16#FE) -> 16#200F;
to_unicode(16#FF) -> 16#06D2;
to_unicode(List) when is_list(List) -> [to_unicode(C) || C <- List];
to_unicode(Bin) when is_binary(Bin) -> bin_to_unicode(Bin, <<>>);
to_unicode(Other) -> Other.

from_unicode(16#20AC) -> 16#80;
from_unicode(16#067E) -> 16#81;
from_unicode(16#201A) -> 16#82;
from_unicode(16#0192) -> 16#83;
from_unicode(16#201E) -> 16#84;
from_unicode(16#2026) -> 16#85;
from_unicode(16#2020) -> 16#86;
from_unicode(16#2021) -> 16#87;
from_unicode(16#02C6) -> 16#88;
from_unicode(16#2030) -> 16#89;
from_unicode(16#0679) -> 16#8A;
from_unicode(16#2039) -> 16#8B;
from_unicode(16#0152) -> 16#8C;
from_unicode(16#0686) -> 16#8D;
from_unicode(16#0698) -> 16#8E;
from_unicode(16#0688) -> 16#8F;
from_unicode(16#06AF) -> 16#90;
from_unicode(16#2018) -> 16#91;
from_unicode(16#2019) -> 16#92;
from_unicode(16#201C) -> 16#93;
from_unicode(16#201D) -> 16#94;
from_unicode(16#2022) -> 16#95;
from_unicode(16#2013) -> 16#96;
from_unicode(16#2014) -> 16#97;
from_unicode(16#06A9) -> 16#98;
from_unicode(16#2122) -> 16#99;
from_unicode(16#0691) -> 16#9A;
from_unicode(16#203A) -> 16#9B;
from_unicode(16#0153) -> 16#9C;
from_unicode(16#200C) -> 16#9D;
from_unicode(16#200D) -> 16#9E;
from_unicode(16#06BA) -> 16#9F;
from_unicode(16#060C) -> 16#A1;
from_unicode(16#06BE) -> 16#AA;
from_unicode(16#061B) -> 16#BA;
from_unicode(16#061F) -> 16#BF;
from_unicode(16#06C1) -> 16#C0;
from_unicode(16#0621) -> 16#C1;
from_unicode(16#0622) -> 16#C2;
from_unicode(16#0623) -> 16#C3;
from_unicode(16#0624) -> 16#C4;
from_unicode(16#0625) -> 16#C5;
from_unicode(16#0626) -> 16#C6;
from_unicode(16#0627) -> 16#C7;
from_unicode(16#0628) -> 16#C8;
from_unicode(16#0629) -> 16#C9;
from_unicode(16#062A) -> 16#CA;
from_unicode(16#062B) -> 16#CB;
from_unicode(16#062C) -> 16#CC;
from_unicode(16#062D) -> 16#CD;
from_unicode(16#062E) -> 16#CE;
from_unicode(16#062F) -> 16#CF;
from_unicode(16#0630) -> 16#D0;
from_unicode(16#0631) -> 16#D1;
from_unicode(16#0632) -> 16#D2;
from_unicode(16#0633) -> 16#D3;
from_unicode(16#0634) -> 16#D4;
from_unicode(16#0635) -> 16#D5;
from_unicode(16#0636) -> 16#D6;
from_unicode(16#0637) -> 16#D8;
from_unicode(16#0638) -> 16#D9;
from_unicode(16#0639) -> 16#DA;
from_unicode(16#063A) -> 16#DB;
from_unicode(16#0640) -> 16#DC;
from_unicode(16#0641) -> 16#DD;
from_unicode(16#0642) -> 16#DE;
from_unicode(16#0643) -> 16#DF;
from_unicode(16#0644) -> 16#E1;
from_unicode(16#0645) -> 16#E3;
from_unicode(16#0646) -> 16#E4;
from_unicode(16#0647) -> 16#E5;
from_unicode(16#0648) -> 16#E6;
from_unicode(16#0649) -> 16#EC;
from_unicode(16#064A) -> 16#ED;
from_unicode(16#064B) -> 16#F0;
from_unicode(16#064C) -> 16#F1;
from_unicode(16#064D) -> 16#F2;
from_unicode(16#064E) -> 16#F3;
from_unicode(16#064F) -> 16#F5;
from_unicode(16#0650) -> 16#F6;
from_unicode(16#0651) -> 16#F8;
from_unicode(16#0652) -> 16#FA;
from_unicode(16#200E) -> 16#FD;
from_unicode(16#200F) -> 16#FE;
from_unicode(16#06D2) -> 16#FF;
from_unicode(List) when is_list(List) -> [from_unicode(C) || C <- List];
from_unicode(Bin) when is_binary(Bin) -> bin_from_unicode(Bin, <<>>);
from_unicode(Other) -> Other.

%% Private functions
bin_to_unicode(<<>>, Bin) -> Bin;
bin_to_unicode(<<C, Rest/binary>>, Acc) ->
    U = to_unicode(C),
    bin_to_unicode(Rest, <<Acc/binary, U/utf8>>).

bin_from_unicode(<<>>, Bin) -> Bin;
bin_from_unicode(<<U/utf8, Rest/binary>>, Acc) ->
    C = from_unicode(U),
    bin_from_unicode(Rest, <<Acc/binary, C>>).
