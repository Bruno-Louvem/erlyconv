%% THIS FILE WAS AUTOMATICALLY GENERATED BY gen_src.pl
%% FROM mappings/ISO8859/8859-6.TXT AT 2016-08-19
-module(iso8859_6).
-vsn(20160819).
-export([to_unicode/1, from_unicode/1]).

%% Public functions
to_unicode(16#AC) -> 16#060C;
to_unicode(16#BB) -> 16#061B;
to_unicode(16#BF) -> 16#061F;
to_unicode(16#C1) -> 16#0621;
to_unicode(16#C2) -> 16#0622;
to_unicode(16#C3) -> 16#0623;
to_unicode(16#C4) -> 16#0624;
to_unicode(16#C5) -> 16#0625;
to_unicode(16#C6) -> 16#0626;
to_unicode(16#C7) -> 16#0627;
to_unicode(16#C8) -> 16#0628;
to_unicode(16#C9) -> 16#0629;
to_unicode(16#CA) -> 16#062A;
to_unicode(16#CB) -> 16#062B;
to_unicode(16#CC) -> 16#062C;
to_unicode(16#CD) -> 16#062D;
to_unicode(16#CE) -> 16#062E;
to_unicode(16#CF) -> 16#062F;
to_unicode(16#D0) -> 16#0630;
to_unicode(16#D1) -> 16#0631;
to_unicode(16#D2) -> 16#0632;
to_unicode(16#D3) -> 16#0633;
to_unicode(16#D4) -> 16#0634;
to_unicode(16#D5) -> 16#0635;
to_unicode(16#D6) -> 16#0636;
to_unicode(16#D7) -> 16#0637;
to_unicode(16#D8) -> 16#0638;
to_unicode(16#D9) -> 16#0639;
to_unicode(16#DA) -> 16#063A;
to_unicode(16#E0) -> 16#0640;
to_unicode(16#E1) -> 16#0641;
to_unicode(16#E2) -> 16#0642;
to_unicode(16#E3) -> 16#0643;
to_unicode(16#E4) -> 16#0644;
to_unicode(16#E5) -> 16#0645;
to_unicode(16#E6) -> 16#0646;
to_unicode(16#E7) -> 16#0647;
to_unicode(16#E8) -> 16#0648;
to_unicode(16#E9) -> 16#0649;
to_unicode(16#EA) -> 16#064A;
to_unicode(16#EB) -> 16#064B;
to_unicode(16#EC) -> 16#064C;
to_unicode(16#ED) -> 16#064D;
to_unicode(16#EE) -> 16#064E;
to_unicode(16#EF) -> 16#064F;
to_unicode(16#F0) -> 16#0650;
to_unicode(16#F1) -> 16#0651;
to_unicode(16#F2) -> 16#0652;
to_unicode(List) when is_list(List) -> [to_unicode(C) || C <- List];
to_unicode(Bin) when is_binary(Bin) -> bin_to_unicode(Bin, <<>>);
to_unicode(Other) -> Other.

from_unicode(16#060C) -> 16#AC;
from_unicode(16#061B) -> 16#BB;
from_unicode(16#061F) -> 16#BF;
from_unicode(16#0621) -> 16#C1;
from_unicode(16#0622) -> 16#C2;
from_unicode(16#0623) -> 16#C3;
from_unicode(16#0624) -> 16#C4;
from_unicode(16#0625) -> 16#C5;
from_unicode(16#0626) -> 16#C6;
from_unicode(16#0627) -> 16#C7;
from_unicode(16#0628) -> 16#C8;
from_unicode(16#0629) -> 16#C9;
from_unicode(16#062A) -> 16#CA;
from_unicode(16#062B) -> 16#CB;
from_unicode(16#062C) -> 16#CC;
from_unicode(16#062D) -> 16#CD;
from_unicode(16#062E) -> 16#CE;
from_unicode(16#062F) -> 16#CF;
from_unicode(16#0630) -> 16#D0;
from_unicode(16#0631) -> 16#D1;
from_unicode(16#0632) -> 16#D2;
from_unicode(16#0633) -> 16#D3;
from_unicode(16#0634) -> 16#D4;
from_unicode(16#0635) -> 16#D5;
from_unicode(16#0636) -> 16#D6;
from_unicode(16#0637) -> 16#D7;
from_unicode(16#0638) -> 16#D8;
from_unicode(16#0639) -> 16#D9;
from_unicode(16#063A) -> 16#DA;
from_unicode(16#0640) -> 16#E0;
from_unicode(16#0641) -> 16#E1;
from_unicode(16#0642) -> 16#E2;
from_unicode(16#0643) -> 16#E3;
from_unicode(16#0644) -> 16#E4;
from_unicode(16#0645) -> 16#E5;
from_unicode(16#0646) -> 16#E6;
from_unicode(16#0647) -> 16#E7;
from_unicode(16#0648) -> 16#E8;
from_unicode(16#0649) -> 16#E9;
from_unicode(16#064A) -> 16#EA;
from_unicode(16#064B) -> 16#EB;
from_unicode(16#064C) -> 16#EC;
from_unicode(16#064D) -> 16#ED;
from_unicode(16#064E) -> 16#EE;
from_unicode(16#064F) -> 16#EF;
from_unicode(16#0650) -> 16#F0;
from_unicode(16#0651) -> 16#F1;
from_unicode(16#0652) -> 16#F2;
from_unicode(List) when is_list(List) -> [from_unicode(C) || C <- List];
from_unicode(Bin) when is_binary(Bin) -> bin_from_unicode(Bin, <<>>);
from_unicode(Other) -> Other.

%% Private functions
bin_to_unicode(<<>>, Bin) -> Bin;
bin_to_unicode(<<C, Rest/binary>>, Acc) ->
    U = to_unicode(C),
    bin_to_unicode(Rest, <<Acc/binary, U/utf8>>).

bin_from_unicode(<<>>, Bin) -> Bin;
bin_from_unicode(<<U/utf8, Rest/binary>>, Acc) ->
    C = from_unicode(U),
    bin_from_unicode(Rest, <<Acc/binary, C>>).
